apply plugin: 'gwt'
apply plugin: 'war'

gwt {
    gwtVersion="2.8.2" // Should match the gwt version used for building the gwt backend
    maxHeapSize="1G" // Default 256m is not enough for gwt compiler. GWT is HUNGRY
    minHeapSize="1G"

    src = files(file('src/main/java')) // Needs to be in front of "modules" below.
    modules 'com.github.tommyettinger.demos.GdxDefinition'
    devModules 'com.github.tommyettinger.demos.GdxDefinitionSuperdev'
    project.webAppDirName = 'webapp'

    compiler.strict = true
    compiler.disableCastChecking = true
}

import org.wisepersist.gradle.plugins.gwt.GwtSuperDev

def HttpFileServer server = null
def httpFilePort = 8080
task startHttpServer () {
    dependsOn draftCompileGwt
    String output = project.buildDir.path + "/gwt/draftOut"
    doLast {
        copy {
            from "webapp"
            into output
        }
        copy {
            from "war"
            into output
        }
        server = new SimpleHttpFileServerFactory().start(new File(output), httpFilePort)
        println "Server started in directory " + server.getContentRoot() + ", http://localhost:" + server.getPort()
    }
}
dependencies {
    implementation project(':core')
    implementation "com.badlogicgames.gdx:gdx:$gdxVersion:sources"
    implementation "com.badlogicgames.gdx:gdx-backend-gwt:$gdxVersion"
    implementation "com.badlogicgames.gdx:gdx-backend-gwt:$gdxVersion:sources"
//    implementation "com.squidpony:squidlib:$squidLibVersion:sources"
//    implementation "com.squidpony:squidlib-util:$squidLibVersion:sources"
    implementation "com.github.SquidPony.SquidLib:squidlib:$squidLibVersion:sources"
    implementation "com.github.SquidPony.SquidLib:squidlib-util:$squidLibVersion:sources"
    implementation "com.github.tommyettinger:regexodus:$regExodusVersion:sources"
    implementation "com.github.tommyettinger:anim8-gdx:0.1.3:sources"
}

task superDev(type: GwtSuperDev) {
    dependsOn startHttpServer
    doFirst {
        gwt.modules = gwt.devModules
    }
}

task dist(dependsOn: [clean, compileGwt]) {
    doLast {
        file("build/dist").mkdirs()
        copy {
            from "build/gwt/out"
            into "build/dist"
        }
        copy {
            from "webapp"
            into "build/dist"
        }
        copy {
            from "war"
            into "build/dist"
        }
    }
}


task addSource {
    doLast {
        sourceSets.main.compileClasspath += files(project(':core').sourceSets.main.allJava.srcDirs)
    }
}

tasks.compileGwt.dependsOn(addSource)
tasks.draftCompileGwt.dependsOn(addSource)

sourceCompatibility = 1.7
sourceSets.main.java.srcDirs = [ "src/main/java/" ]


eclipse.project {
    name = appName + "-gwt"
}
